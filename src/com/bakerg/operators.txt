! - boolean "not"
# - power, find
$ - copy from stack, sort
% - mod, split, map
& - bitwise/setwise "and"
( - decrement, uncons from left
) - increment, uncons from right
* - multiply, join, repeat, fold
+ - add, concat
, - range, length, filter
- - subtract, remove
/ - divide, split, each
: - infix operator, can be followed by:
- variable name - set variable
- unary operator - map
- binary operator - fold
; - pop and discard
< - compare, slice
= - compare, array get
> - compare, slice
? - if (ternary)
@ - rotate top 3 elements on the stack
[ - start array
\ - swap top 2 elements on the stack
] - end array
^ - bitwise xor, symmetric difference
_ - duplicate top element on the stack
` - string representation
a - wrap in array
b - base conversion
c - convert to char
d - convert to double
e followed by numeric literal - infix operator, calculates *10x (as in the scientific notation)
f - infix operator, can be followed by:
- variable name - for loop
- binary operator or block - map with extra parameter
g - do-while loop that pops the condition, signum, get from url
h - do-while loop that leaves the condition on the stack
i - convert to integer
j - memoize
l - read line
m followed by numeric literal - subtract (same as - but avoids the need for a space after it)
o - print value
p - print string representation and newline
q - read the whole input
r - read token (whitespace-separated)
s - convert to string (char array)
t - array set
z - zip, abs
| - bitwise/setwise "or"
~ - bitwise "not", eval, dump array
e& - logical and
e< - min
e> - max
ea - command-line args
ed - debug (show stack contents)
el - lowercase
er - transliteration (element replacement)
es - timestamp (milliseconds from the epoch)
et - local time
eu - uppercase
e| - logical or
m* - cartesian product
m< - bit shift, rotate left
m> - bit shift, rotate right
mC - arccos
mF - factorization with exponents
mL - log with base
mO - round with precision
mS - arcsin
mT - arctan
m[ - floor
m] - ceil
ma - atan2
mc - cos
md - divmod
me - exp
mf - factorization
mh - hypot
ml - ln (natural logarithm)
mo - round
mp - prime
mq - sqrt
mr - random number, shuffle
ms - sin
mt - tan